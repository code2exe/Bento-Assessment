# # MINIMAL WORKING CONFIG
# jobs:
#   test:
#     executor: node/default
#     steps:
#       - checkout
#       - node/install-packages:
#           cache-path: ~/project/node_modules
#           override-ci-command: npm install
#       - run: npm test

#   deploy_infrastructure:
#     executor: terraform/default
#     steps:
#       - checkout
#       - terraform/init:
#           path: .
#       - terraform/validate:
#           path: .
#       - terraform/fmt:
#           path: .
#       - terraform/plan:
#           path: .
#       - terraform/apply:
#           path: .
#       - terraform/destroy:
#           path: .

# orbs:
#   node: 'circleci/node@4.0.0'
#   terraform: circleci/terraform@1.0.1
# version: 2.1
# workflows:
#   bento_tests:
#     jobs:
#       - test
#       - deploy_infrastructure
#         requires: 
#           - test






# orbs:
#   node: circleci/node@4.0.0
#   terraform: circleci/terraform@1.0.1
# version: 2.1
# workflows:
#   test_and_deploy-infrastructure:
#     jobs:
#       - node/test
#   # deploy_infrastructure:
#   #   jobs:
#       - terraform/init:
#           checkout: true
#           path: .
#           requires:
#             - node/test
#           # context: terraform
#       - terraform/validate:
#           checkout: true
#           path: .
#           # context: terraform
#           requires:
#             - terraform/init
#       - terraform/plan:
#           checkout: true
#           path: .
#           # context: terraform
#           persist-workspace: true
#           requires:
#             - terraform/validate
#       - terraform/apply:
#           attach-workspace: true
#           # context: terraform
#           filters:
#             branches:
#               only: master
#           requires:
#             - terraform/plan



















    
#TESTING CONFIG I  
version: 2.1
jobs:
  build:

    docker:
      - image: circleci/node:current
    steps:
      - checkout
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{checksum "package-lock.json"}}
      - run:
          name: install-npm
          command: npm install
      - save_cache:
          key: dependency-cache-{{checksum "package-lock.json"}}
          paths:
            - ./node_modules
      - run:
          name: test package
          command: npm test

  plan-apply:
    docker:
      - image: hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: terraform init & plan
          command: |
            terraform fmt
            terraform init
            terraform plan -out tfapply
        #  terraform plan -out tfapply -var-file variables.tfvars
      - persist_to_workspace:
          root: .
          paths:
            - .
  # apply:
  #   docker:
  #     - image: hashicorp/terraform:light
  #   steps:
  #     - attach_workspace:
  #         at: .
  #     - run:
  #         name: terraform
  #         command: |
  #           terraform apply -auto-approve tfapply
  #     - persist_to_workspace:
  #         root: .
  #         paths:
  #           - .

# Orchestrate our job run sequence
workflows:
  build:
    jobs:
      - build
      - plan-apply:
          requires:
            - build































































#TESTING CONFIG II
# version: 2.1
# orbs:
#   node: circleci/node@4.0.0

# workflows:
#   node-tests:
#     jobs:
#       - node/test


# jobs:
#   test:
#     executor: node/default
#     steps:
#       - checkout
#       - node/install-packages:
#           cache-path: ~/project/node_modules
#           override-ci-command: npm install
#       - run: npm run test
# orbs:
#   node: 'circleci/node:x.y'
# version: 2.1
# workflows:
#   test_my_app:
#     jobs:
#       - test


## TESTING DEPLOY CONFIG III

# version: 2.17
# jobs:
#   build:
#     working_directory: ~/hello-sts
#     docker:
#       - image: circleci/node:8.11.1
#     steps:
#       - checkout
#       - run:
#           name: update-npm
#           command: 'sudo npm install -g npm@latest'
#       - restore_cache:
#           key: dependency-cache-{{checksum "package-lock.json"}}
#       - run:
#           name: install-npm
#           command: npm install
#       - save_cache:
#           key: dependency-cache-{{checksum "package-lock.json"}}
#           paths:
#             - ./node_modules
#   deploy:
#     machine:
#       enabled: true
#     steps:
#       - checkout
#       - run:
#           name: Deploy over SSH
#           command: ssh -p your_port_number your_user@your_host "cd ../path/to/your/project; git pull; pm2 start hello_sts";

# workflows:
#   version: 2
#   build-and-deploy:
#     jobs:
#       - build
#       - deploy:
#           requires:
#             - build